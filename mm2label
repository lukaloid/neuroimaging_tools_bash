#!/bin/bash
# Author: Luka Ruzic

maxtries=3

### setup atlases (1-indexed)
i=1
while read a; do
    atlas_decoder[i]="$a"
    let i++
done < <(atlasquery --dumpatlases)

usage () {
    echo "
Usage: $0 <x> <y> <z> [options]
Description:  takes MNI coordinates (mm) <x> <y> <z> and returns a name, hemisphere, and Brodmann Area (given by the Talairach Daemon)
              searches for the most probable Brodmann Area* label within a 9x9x9 cube of the MNI coordinates
              if no such label is found, mm2label exits with exit status 9
              (* only cortical gray matter, no subcortical or cerebellar Talairach labels are given)
Options:
  -icbm
     use the ICBM Lancaster coordinate conversion (default: Brett coordinates) (only applies to TD, not -a atlases)
  -a <ATLAS CODE>
     report from an FSL probabilistic atlas instead of the Talairach Daemon
     threshold regions at thr% (DEFAULT: 0%)     
     ex: mm2label 0 0 0 -a 6,7
  -athr <pct>
     Threshold probabilistic regions reported (by -a) at <pct>%
     (only integer percenteges allowed)
     ex: mm2label 0 0 0 -a 6,7 -athr 25
ATLAS CODES:"
    for (( i=1; i<${#atlas_decoder[*]} ; i++ )); do
	echo "          $i: ${atlas_decoder[i]}"
    done

    exit ${1:-1}
} >&2

[[ " $* " =~ " "-*help" " ]] && usage 0

# hidden in the usage because users should get used to using vox2mm instead
# but retained so as to not break anything already using the option    
#  -vox
#     convert input coordinates from MNI vox (2mm resolution) to MNI mm


too_many_tries() {
    echo "$0 is bombing out with $maxtries failed queries of the Talairach Daemon" >&2
    exit 8
}

tdquery() {
#    java org.talairach.PointToTD 3:9,$1,$2,$3 2>&1 | tr '\n' %
    /usr/bin/java -cp /usr/local/talairach/talairach.jar org.talairach.PointToTD 3:9, $1, $2, $3 host=${4}:1600 | tr '\n' %
    [ ${PIPESTATUS[0]} -ne 0 ] && echo "ERROR: TD call failed" 2>/dev/null
}


### PARSE ARGUMENTS
# read in coordinates (must be first three arguments)
n=0
while [ "$1" ]&&[[ "$1" =~ ^[0-9-]*$ ]]; do
    coordinates+="$1 "
    let n++
    shift
done
if [ $n -ne 3 ]; then
    echo "ERROR: 3 and only 3 coordinates allowable" >&2
    exit 1
fi

# options
athr=0
while [ "$1" ]; do
    if [ "$1" == "-icbm" ]; then
	icbm=set
    elif [ "$1" == "-vox" ]; then
	vox=set
    elif [ "$1" == "-a" ]; then
	while [ $2 ]&&[ ${2:0:1} != "-" ]; do
	    if [ $2 -lt 0 ]||[ $2 -gt ${#atlas_decoder[*]} ]; then
		echo "ERROR: $2 is not a valid atlas code" >&2
		exit 1
	    fi
	    
	    atlas+=("${atlas_decoder[$2]}")
	    shift
	done
    elif [ "$1" == "-athr" ]; then
	shift; athr=$1
    elif [ "$1" == "-v" ]; then
	verbose=set
    else 
	echo "UNRECOGNIZED ARGUMENT: $1" >&2
	usage
    fi
    shift
done

### error checking
if [[ "$p" =~ [^0-9] ]]; then
    let e++; echo "ERROR: only integers acceptable" >&2
fi

[ $e ] && usage

# retrieve label
if [ ! "$atlas" ]; then
    # convert to talairach coordinates
    [ $icbm ] && t=($(icbm_mni2tal ${coordinates})) || t=($(mni2tal ${coordinates}))


    # submit to talairach daemon
    tdoutput="$(tdquery ${t[*]} localhost)"; let tries++
    # resubmit until there's no error
    until [ $(echo $tdoutput | grep -icE "error: td call failed|exception") -eq 0 ]; do
	[ $tries -ge $maxtries ] && break
	echo "retrying Talairach Daemon" >&2
	tdoutput="$(tdquery ${t[*]} localhost)"; let tries++
	sleep 1
    done
    # try head node TD as a last ditch
    tdoutput="$tdquery ${t[*]} dream)"
    [ $(echo $tdoutput | grep -icE "error: td call failed|exception") -ne 0 ] && too_many_tries


    # parse into desired fields
    fields="$(echo $tdoutput | awk -F',' 'BEGIN {RS="%"} /Brodmann/ {print $1";" $3";" $5; exit}' | sed 's|*|_|g')"

    hemisphere="$(echo $fields | cut -d\; -f1 | grep -o '[LR]')"
    region="$(echo $fields | cut -d\; -f2 | tr ' ' _)"
    BArea="$(echo $fields | cut -d\; -f3 | cut -d" " -f3)"    

    # return output
    [ $region ] && echo "$region $([ $hemisphere ] && echo $hemisphere) $([ $BArea ] && echo BA$BArea)" || exit 9
else
    for ((i=0; i<${#atlas[*]}; i++)); do
	label=""
	while read pct region; do 
	    if [[ "$pct" =~ [^0-9] ]]; then
		label+=" $pct $region;"
	    else
		[ $pct -ge $athr ] && label+=" ${pct}% ${region};"
	    fi
	done < <(atlasquery -a "${atlas[i]}" -c ${coordinates// /,} | sed -e 's|.*<br>||' -e 's|, \([0-9]*%\)|\n\1|g' -e 's|,|:|g' -e 's|%||g')
	echo $label | sed -e 's|^ ||' -e 's|;$||'
    done
fi


exit 0
